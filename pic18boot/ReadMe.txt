  -------------------------------------------------------------------
              PIC 18F14K50  用 HID bootloader / HIDmon
  -------------------------------------------------------------------

■ 概要

   これはdiolanが提供しているPIC 18F4455用のHIDブートローダーを元にして
   作成した HID bootloader 兼 HID monitorです。

■ 何に使うのですか？

   MicroChipが提供しているFirmware-Bと呼ばれるブートローダーの代替に使えます。

   ブートローダーとは：

   18F2550/4550/14K50 シリーズのPICは、USBでパソコンと簡単に接続できるので、
   最初にブートローダーを焼いておくことによって、毎回PICライターを使用
   することなく、USB経由でプログラムを転送、実行出来、手軽にPICプログラム
   の開発が出来ます。

   それだけではなく、AVRでお馴染みの HIDmon の機能も併せ持っています。

■ 用意するハードウェアは？

     PIC 18F14K50   ( 秋月電子通商にて １個 200円 で販売されています )
	 もしくは PIC18F2550 / 18F4550 


■ ブートローダーとして使えますか？

   ●一応使えます。

   ・外部のPICライターを用意して、hexfiles/loader-18F14K50.hex を焼きます。
   ・USB側に繋ぐと、RC0に接続されたLEDが点滅を始めればOKです。

    picmon/picmonit.exe   : HIDmon の PICバージョンです。
    picmon/picboot.exe    : ブートローダーです。 HEXファイルを書き込みできます。
    が動作することを確認します。

   ●基本的な使い方.

   C:> picboot myfile.hex
   myfile.hex をFlashに書き込みます。

   C:> picboot -r
   Flashに書き込まれている0x800番地から実行可能なプログラムを起動します。

   C:> picboot -r myfile.hex
   myfile.hex をFlashに書き込んで、実行します。（上記の２つの動作を一度に行います）

   C:> picboot -rp a.hex
   現在書き込まれているFlashの内容を HEXFILE形式で 'a.hex' に出力します。

   C:> picboot -E
   Flashの内容を全消去します。(通常の書き込みでは、書き込みに必要な部分のみ消去します)

   ● オプションの説明

   ・'-s'オプションについて.
       picboot -s1000 USBDevice-CDC-BasicDemo-C18-LowPinCountUSBDevelopmentKit.hex
     '-s' に続けて１６進数で開始アドレスを指定すると、0x800番地スタートでないアプリケーション
   についてもブート可能な形で書き込み出来ます。(0x800番地にjmpテーブルが書き込まれます)

   ・'-B'オプションについて.
     '-B' オプションはブートプログラム領域に対する読み書きを許可するオプションです。
　　これをうまく使うことで、0x800番地に書かれたブートローダーから、0x0000番地のブートローダー
　　の更新を行うことが出来ます。

■ picbootの使い方に関する注意

   ・ブートローダーとして機能させる場合はRC2端子に接続されたスイッチを押してRC2=Lowレベル
     にした状態から通電、あるいはリセットを行ってください。

   ・そうでない場合は0x800番地のアプリケーションが起動するようになっています。

   ・アプリケーションが書き込まれていない状態（最初にブートローダーを書き込んだ直後）では
     RC2端子状態にかかわらずブートローダーが起動するようになっています。
     (0x800番地に、ブートローダーに戻るjumpコードが書き込まれています)



■ テスト版(0x0800オリジン)の使い方を教えてください。

   ・このブートローダーを使って、新しいバージョンもしくは新機能を追加したローダー
     を開発する場合に使用します。



■ 再ビルドの方法は？

   ・MicroChipの MPLab(MPASMWIN) をインストールして、MPASMWIN.EXEの実行パスを
   　通しておいてください。

   ・make を実行します。 make.exe はWinAVRなどで使用している一般的なGNU make 
     が使えます。

   ・GNUPICツールの gpasm を使用することも検討しましたが、gpasmの致命的なバグ
     により、どうあがいても正しいHIDディスクリプタが生成出来ないようですので
     お勧めはいたしません。
     ( gpasm のバグが修正されれば再検討します )


   ● ホスト側ツールは MinGW gcc を使ってビルドしてください。

      -mno-cygwin オプションを付けることで、 Cywin gcc でもコンパイルできる
      はずですが、テストはしていません。


■ オリジナル版bootloaderからの変更点

   ・ PIC18F14K50 に対応しました。
   ・ 他のブートローダーから起動できるようにオリジンを変えられるようにしました。
   ・ 暗号処理は容量の都合で削除しました。
   ・ XINST (PIC18F2550などで追加された拡張命令) を使用しないようにしています。
      具体的には addfsr と subfsr 命令です。


■ 注意事項

   ・ このブートローダーは XINST=ON / OFF のどちらでも動作しますが、ブートローダー
      から起動するプログラムは、その書き方によりどちらかを仮定していることが殆ど
      です。
   ・ 特に、sdccでコンパイルされたプログラムはXINST=OFFでないと動作しません。
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   ・ 焼く場合に XINST のモードをよく確認してください。
      変更する場合は、 fuse.h の XINST= の項目を編集して再ビルドしてください。
   ・ 添付しているhexfiles は XINST=OFF で作成しました。


■ 問題点

　 ・現状のソースの書き方がフルアセンブラ風味なので、Ｃ言語と比べてメンテナンス性に
　　 問題があります。


■ どうしてＣ言語を使わないのですか？

　 ・diolan社に聞いてください。

　 ・Ｃ言語で2kBに収まるHID bootloaderを書くのは至難の業なのかもしれません。
     MicroChipのHID bootloaderは4kBもあります。

　 ・試しにＣ言語でコーディングしてみるとすぐ分かります。

     asm リストを見ると笑っちゃうようなコードが吐かれていますが、誰にもどうする
     こともできません。 
     たぶん gcc を移植しても PIC18Fのアーキテクチャーの前には全てが徒労に終わるでしょう。

     唯一の解決策は、全部手でコーディングすることです。TK-80の時代に戻りましょう。


■ ライセンスは？

   ・GPL (GNU Public License v3)だそうです。


■ オプションの切り替え方法

（１）    Makefile:
    VECTOR=0000
    #VECTOR=0800
    #VECTOR=1000

    上記 VECTOR = の定義 を差し替えれば、0番地オリジン,800番地オリジンの切り替えが
    可能です。書き換えた後、make cleanしてから makeしてください。

    VECTOR=0800 を選んだ場合は0x800番地オリジンになり、他のブートローダーもしくは
    このブートローダーを使用してデバッグできます。



■ 旧来のhidmon-2550 / hidmon-14k50 との違いは？

・これまで、ホストＰＣ側のツール(picmon.exe / picboot.exe)がデバイス毎に別々
  に用意されていましたが、このバージョンではＰＣ上のツールに関しては共通化
　されています。（但しファームウェアはデバイス毎に用意する必要があります）

・HID Reportの転送方法をコントロール転送からインタラプト転送に変更しました。

・デバイスに与えるコマンド番号を整理しました。
  pic18spxライターのサブセット仕様（ライター系コマンドを省略したもの）になっています。
  現状ではProductStringが異なるのでpic18spxとの統合は行われません。

・BIOS機能, poll系ポートアクセス機能は省いてあります。


# --------------------------------------------------------

■ 変更履歴

 2010-0406: reboot機能の修正.

